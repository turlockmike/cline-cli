{
  "name": "hataraku",
  "version": "0.5.0",
  "description": "An autonomous coding agent and SDK for building AI-powered development tools",
  "author": {
    "name": "Michael Darmousseh"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/turlockmike/hataraku"
  },
  "homepage": "https://github.com/turlockmike/hataraku",
  "license": "MIT",
  "keywords": [
    "cli",
    "hataraku",
    "claude",
    "dev",
    "mcp",
    "openrouter",
    "coding",
    "agent",
    "autonomous",
    "ai",
    "sdk"
  ],
  "main": "./dist/cjs/core/index.js",
  "types": "./dist/types/core/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/types/core/index.d.ts",
      "require": "./dist/cjs/core/index.js"
    }
  },
  "bin": {
    "hataraku": "./dist/cli.cjs"
  },
  "files": [
    "dist",
    "README.md",
    "LICENSE",
    "src/audio"
  ],
  "scripts": {
    "build:clean": "rm -rf dist",
    "build:cjs": "tsc -p tsconfig.cjs.json",
    "build:audio": "mkdir -p dist/audio && cp -r src/audio/* dist/audio/",
    "build": "npm run build:clean && npm run build:cjs && npm run build:cli && npm run build:audio",
    "build:cli": "node esbuild.js --cli --production",
    "dev": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/cli.ts",
    "example": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/query.ts",
    "example:stream": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/streaming-task.ts",
    "example:schema": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/schema-validation.ts",
    "example:thread": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/thread-reuse.ts",
    "example:tool": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/tool-use.ts",
    "example:multi": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/multi-step-task.ts",
    "example:workflow": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/workflow-parallel.ts",
    "example:math": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/math-simple.ts",
    "example:basic": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/basic-task.ts",
    "example:structured": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/structured-task.ts",
    "example:mcp-jira": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/mcp-jira.ts",
    "example:agent-mcp": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/agent-mcp.ts",
    "example:hataraku-mcp": "OPENROUTER_API_KEY=$(grep OPENROUTER_API_KEY .env | cut -d '=' -f2) tsx src/examples/hataraku-mcp.ts",
    "example:hataraku-mcp-inspector": "npx @modelcontextprotocol/inspector npm run example:hataraku-mcp",
    "changeset": "changeset",
    "version-packages": "changeset version",
    "check-types": "tsc --noEmit",
    "clean": "rm -rf dist",
    "lint": "eslint src --ext ts",
    "prepare": "husky",
    "release": "changeset publish",
    "start": "node dist/cli.js",
    "test": "jest",
    "prepublishOnly": "npm run clean && npm run build"
  },
  "publishConfig": {
    "access": "public"
  },
  "devDependencies": {
    "@changesets/cli": "^2.27.12",
    "@changesets/types": "^6.0.0",
    "@types/diff": "^5.2.1",
    "@types/jest": "^29.5.14",
    "@types/mocha": "^10.0.7",
    "@types/node": "^20.17.13",
    "@types/sound-play": "^1.1.3",
    "@typescript-eslint/eslint-plugin": "^7.14.1",
    "@typescript-eslint/parser": "^7.11.0",
    "esbuild": "^0.24.0",
    "eslint": "^8.57.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^15.2.11",
    "ts-jest": "^29.2.5",
    "tsx": "4.19.2",
    "typescript": "^5.4.5"
  },
  "dependencies": {
    "@ai-sdk/amazon-bedrock": "^1.1.6",
    "@anthropic-ai/bedrock-sdk": "^0.10.2",
    "@anthropic-ai/sdk": "^0.26.0",
    "@anthropic-ai/vertex-sdk": "^0.4.1",
    "@aws-sdk/client-bedrock-runtime": "^3.706.0",
    "@aws-sdk/credential-providers": "^3.744.0",
    "@google/generative-ai": "^0.18.0",
    "@inquirer/prompts": "^3.3.0",
    "@mistralai/mistralai": "^1.0.0",
    "@modelcontextprotocol/sdk": "^1.0.1",
    "@openrouter/ai-sdk-provider": "^0.2.1",
    "@types/clone-deep": "^4.0.4",
    "@types/express": "^5.0.0",
    "@types/node-fetch": "^2.6.12",
    "@types/pdf-parse": "^1.1.4",
    "@types/turndown": "^5.0.5",
    "ai": "4.1.34",
    "axios": "^1.7.4",
    "chalk": "^4.1.2",
    "cheerio": "^1.0.0",
    "chokidar": "^4.0.1",
    "clone-deep": "^4.0.1",
    "commander": "^13.1.0",
    "default-shell": "^2.2.0",
    "delay": "^6.0.0",
    "diff": "^5.2.0",
    "express": "^4.21.2",
    "fast-deep-equal": "^3.1.3",
    "globby": "^14.0.2",
    "isbinaryfile": "^5.0.2",
    "mammoth": "^1.8.0",
    "node-fetch": "^3.3.2",
    "openai": "^4.78.1",
    "os-name": "^6.0.0",
    "p-wait-for": "^5.0.2",
    "pdf-parse": "^1.1.1",
    "playwright": "^1.49.1",
    "puppeteer-chromium-resolver": "^23.0.0",
    "puppeteer-core": "^23.4.0",
    "serialize-error": "^11.0.3",
    "sound-play": "^1.1.0",
    "strip-ansi": "^7.1.0",
    "tree-sitter-wasms": "^0.1.11",
    "turndown": "^7.2.0",
    "web-tree-sitter": "^0.22.6",
    "zod": "^3.23.8"
  },
  "overrides": {
    "minimist": "^1.2.8",
    "minimatch": "^3.1.2"
  },
  "lint-staged": {
    "src/**/*.{ts,tsx}": [
      "npx eslint -c .eslintrc.json"
    ]
  }
}
